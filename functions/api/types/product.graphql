type Product {
    uid: ID!
    productId: String!
    name: String!
    description: String!
    categories: [Category!]!
    media: [Media!]!
    variants: [Variant!]!
}

input ProductInput {
    uid: ID
    name: String!
    description: String!
    categories: [CategoryInput]!
}

union ProductResult = Product | ProductNotFoundError

type Query { 
    product(uid: ID!): ProductResult!
    products: [Product],
}

type Mutation {
    createProduct(productInput: ProductInput): ProductResult!
    updateProduct(productInput: ProductInput): ProductResult!
}